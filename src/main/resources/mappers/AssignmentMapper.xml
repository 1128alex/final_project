<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.univ.assignment.dao.AssignmentDAO">
	<select id="selectAsgmtListByClassId"
		resultType="com.univ.assignment.model.Assignment" parameterType="int">
		SELECT
		`classId`,
		`asgmtId`,
		`asgmtType`,
		`asgmtName`,
		`content`,
		`filePath`,
		`maxScore`,
		`dueDate`,
		`createdAt`,
		`updatedAt`
		FROM
		`assignment`
		WHERE
		`classId` =
		#{classId}
		ORDER BY `updatedAt` DESC;

	</select>

	<insert id="insertAssignment"
		parameterType="com.univ.assignment.model.Assignment">
		<!-- INSERT INTO `assignment` ( `classId`, `asgmtType`, `asgmtName`, `content`, 
			`filePath`, `maxScore`, `dueDate`, `createdAt`, `updatedAt` ) VALUES ( #{classId}, 
			#{asgmtType}, #{asgmtName}, #{content}, #{filePath}, #{maxScore}, #{dueDate}, 
			NOW(), NOW() ) -->

		<!-- INSERT INTO `assignment` ( `classId`, `asgmtId`, `asgmtType`, `asgmtName`, 
			`content`, `filePath`, `maxScore`, `dueDate`, `createdAt`, `updatedAt` ) 
			VALUES ( #{classId}, MAX(`asgmtId`)+1, #{asgmtType}, #{asgmtName}, #{content}, 
			#{filePath}, #{maxScore}, #{dueDate}, NOW(), NOW() ) -->
		INSERT INTO `assignment`
		(
		`classId`,
		`asgmtId`,
		`asgmtType`,
		`asgmtName`,
		`content`,
		`filePath`,
		`maxScore`,
		`dueDate`,
		`createdAt`,
		`updatedAt`
		)
		VALUES
		(
		#{classId},
		IFNULL(((select `asgmtId` from (SELECT
		MAX(`asgmtId`)
		`asgmtId` FROM `assignment` where `classId` = #{classId}
		LIMIT 1) TMP)
		+1),1),
		#{asgmtType},
		#{asgmtName},
		#{content},
		#{filePath},
		#{maxScore},
		#{dueDate},
		NOW(),
		NOW()
		)
	</insert>

	<select id="selectAsgmtByClassIdAsgmtId"
		resultType="com.univ.assignment.model.Assignment" parameterType="map">
		SELECT
		`classId`,
		`asgmtId`,
		`asgmtType`,
		`asgmtName`,
		`content`,
		`filePath`,
		`maxScore`,
		`dueDate`,
		`createdAt`,
		`updatedAt`
		FROM
		`assignment`
		WHERE
		`classId` =
		#{classId}
		AND
		`asgmtId` =
		#{asgmtId}
		LIMIT 1;
	</select>

	<update id="updateAssignment"
		parameterType="com.univ.assignment.model.Assignment">
		UPDATE
		`assignment`
		SET
		`asgmtType`=#{asgmtType},
		`asgmtName`=#{asgmtName},
		`content` = #{content},
		`filePath` =
		#{filePath},
		`maxScore` = #{maxScore},
		`dueDate` = #{dueDate},
		`updatedAt`=NOW()
		WHERE
		`classId` =
		#{classId},
		`asgmtId`
		=
		#{asgmtId},
		`updatedAt` = NOW()
	</update>

	<delete id="deleteAssignment" parameterType="map">
		DELETE FROM
		`assignment`
		WHERE
		`classId` = #{classId}
		AND
		`asgmtId` = #{asgmtId}
	</delete>

	<insert id="insertSubmittedAssignment"
		parameterType="com.univ.assignment.model.SubmittedAsgmt">
		INSERT INTO `submittedassignment`
		(
		`classId`,
		`asgmtId`,
		`studentNum`,
		`content`,
		`filePath`,
		`access`,
		`createdAt`,
		`updatedAt`
		)
		VALUES
		(
		#{classId},
		#{asgmtId},
		#{studentNum},
		#{content},
		#{filePath},
		#{access},
		NOW(),
		NOW()
		)
	</insert>
	<update id="updateSubmittedAssignment"
		parameterType="com.univ.assignment.model.SubmittedAsgmt">
		UPDATE `submittedassignment`
		SET
		`content` =
		#{content},
		`filePath` = #{filePath},
		`score` = NULL,
		`access` = #{access},
		`updatedAt` =
		NOW()
		WHERE
		`classId` = #{classId}
		AND
		`asgmtId` = #{asgmtId}
		AND
		`studentNum` =
		#{studentNum}
	</update>

	<select id="checkDuplicatedSubmittedAsgmt" parameterType="map"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		`submittedassignment`
		WHERE
		`classId` =
		#{classId}
		AND
		`asgmtId` = #{asgmtId}
		AND
		`studentNum` = #{studentNum}
	</select>

	<select id="selectSubmittedAsgmt" parameterType="map"
		resultType="com.univ.assignment.model.SubmittedAsgmt">
		SELECT
		`classId`,
		`asgmtId`,
		`studentNum`,
		`content`,
		`score`,
		`feedback`,
		`filePath`,
		`access`,
		`createdAt`,
		`updatedAt`
		FROM
		`submittedassignment`
		WHERE
		`classId` = #{classId}
		AND
		`asgmtId` =
		#{asgmtId}
		AND
		`studentNum` =
		#{studentNum}
	</select>

	<select id="selectSubmittedAsgmtUserList" parameterType="map"
		resultType="com.univ.assignment.model.AssignmentUserCombined">
		SELECT
		a.`id`,
		a.`classId`,
		a.`asgmtId`,
		a.`studentNum`,
		a.`content`,
		a.`filePath`,
		a.`score`,
		a.`feedback`,
		a.`createdAt`,
		a.`updatedAt`,
		b.`email`,
		b.`firstName`,
		b.`lastName`
		FROM
		`submittedassignment` as a
		INNER JOIN
		`user`as b
		ON
		a.`studentNum` =
		b.`studentNum`
		WHERE
		`classId` = #{classId}
		AND
		`asgmtId` = #{asgmtId}
	</select>

	<select id="selectSubmittedAsgmtUserById" parameterType="int"
		resultType="com.univ.assignment.model.AssignmentUserCombined">
		SELECT
		a.`id`,
		a.`classId`,
		a.`asgmtId`,
		a.`studentNum`,
		a.`content`,
		a.`filePath`,
		a.`score`,
		a.`feedback`,
		a.`createdAt`,
		a.`updatedAt`,
		b.`email`,
		b.`firstName`,
		b.`lastName`
		FROM
		`submittedassignment` as a
		INNER JOIN
		`user`as b
		ON
		a.`studentNum` =
		b.`studentNum`
		WHERE
		`id` = #{id}
	</select>

	<update id="updateGradeSubmittedAsgmt" parameterType="map">
		UPDATE
		`submittedassignment`
		SET `score` = #{score}, `feedback` =
		#{feedback},
		`access` = #{access}, `updatedAt` = NOW()
		WHERE
		`id` = #{id}
	</update>
</mapper>