<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper 설정 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.univ.board.dao.BoardDAO">
	<insert id="insertPost"
		parameterType="com.univ.board.model.Post">
		INSERT INTO `post`
		(
		`classId`,
		`postId`,
		`writerEmail`,
		`title`,
		`content`,
		`filePath`,
		`createdAt`,
		`updatedAt`
		)
		VALUES
		(
		#{classId},
		IFNULL((SELECT a FROM (SELECT MAX(`postId`) as a FROM
		`post` WHERE `classId` = #{classId}) TMP)+1,1),
		#{writerEmail},
		#{title},
		#{content},
		#{filePath},
		NOW(),
		NOW()
		)
	</insert>

	<select id="selectPostListByClassId" parameterType="int"
		resultType="com.univ.board.model.PostUserCombined">
		SELECT
		a.`classId`,
		a.`postId`,
		a.`writerEmail`,
		a.`title`,
		a.`content`,
		a.`filePath`,
		a.`createdAt`,
		a.`updatedAt`,
		b.`email`,
		b.`firstName`,
		b.`lastName`,
		b.`profileUrl`
		FROM
		`post` as a
		INNER JOIN
		`user` as b
		ON
		a.`writerEmail` = b.`email`
		WHERE
		a.`classId` =
		#{classId}
		ORDER BY
		a.`updatedAt` DESC
	</select>

	<select id="selectPostByClassIdPostId" parameterType="map"
		resultType="com.univ.board.model.PostUserCombined">
		SELECT
		a.`classId`,
		a.`postId`,
		a.`writerEmail`,
		a.`title`,
		a.`content`,
		a.`filePath`,
		a.`createdAt`,
		a.`updatedAt`,
		b.`email`,
		b.`firstName`,
		b.`lastName`,
		b.`profileUrl`
		FROM
		`post` as a
		INNER JOIN
		`user` as b
		ON
		a.`writerEmail` = b.`email`
		WHERE
		a.`classId` =
		#{classId}
		AND
		a.`postId` = #{postId}
		ORDER BY
		a.`updatedAt` DESC
	</select>

	<insert id="insertComment"
		parameterType="com.univ.board.model.Comment">
		INSERT INTO `comment`
		(
		`classId`,
		`postId`,
		`commentId`,
		`writerEmail`,
		`content`,
		`createdAt`,
		`updatedAt`
		)
		VALUES
		(
		#{classId},
		#{postId},
		IFNULL((SELECT a FROM (SELECT MAX(`commentId`) as a FROM
		`comment`
		WHERE
		`classId` = #{classId} AND `postId` = #{postId})
		TMP)+1,1),
		#{writerEmail},
		#{content},
		NOW(),
		NOW()
		)
	</insert>

	<select id="selectCommentListByClassIdPostId"
		parameterType="map"
		resultType="com.univ.board.model.CommentUserCombined">
		SELECT
		a.`classId`,
		a.`postId`,
		a.`commentId`,
		a.`writerEmail`,
		a.`content`,
		a.`createdAt`,
		a.`updatedAt`,
		b.`email`,
		b.`firstName`,
		b.`lastName`,
		b.`profileUrl`
		FROM
		`comment` as a
		INNER JOIN
		`user` as b
		ON
		a.`writerEmail` = b.`email`
		WHERE
		a.`classId` =
		#{classId}
		AND
		a.`postId` = #{postId}
		ORDER BY
		a.`updatedAt` DESC
	</select>

	<select id="selectBoardListByClassId" parameterType="int"
		resultType="com.univ.board.model.PostUserCombined">
		SELECT
		a.`classId`,
		a.`postId`,
		a.`writerEmail`,
		a.`title`,
		a.`content`,
		a.`filePath`,
		a.`createdAt`,
		a.`updatedAt`,
		b.`courseCode`,
		c.`firstName`,
		c.`lastName`
		FROM
		`post` as a
		INNER JOIN
		`class` as b
		ON
		a.`classId` =
		b.`id`
		INNER JOIN
		`user` as c
		ON
		a.`writerEmail` = c.`email`
		WHERE
		`classId` =
		#{classId}
		ORDER BY `updatedAt`
		DESC;
	</select>
	<select id="selectBoardListByEmail" parameterType="string"
		resultType="com.univ.board.model.PostUserCombined">
		SELECT
		a.`classId`,
		a.`postId`,
		a.`writerEmail`,
		a.`title`,
		a.`content`,
		a.`filePath`,
		a.`createdAt`,
		a.`updatedAt`,
		c.`firstName`,
		c.`lastName`
		FROM
		`post` as a
		INNER JOIN
		`registry` as b
		ON
		a.`classId` =
		b.`classId`
		INNER JOIN
		`user` as c
		ON
		a.`writerEmail` = c.`email`
		WHERE
		b.`email` = #{email}
		ORDER BY
		a.`updatedAt`
		DESC;
	</select>
	<select id="selectBoardListByEmailProf" parameterType="string"
		resultType="com.univ.board.model.PostUserCombined">
		SELECT
		a.`classId`,
		a.`postId`,
		a.`writerEmail`,
		a.`title`,
		a.`content`,
		a.`filePath`,
		a.`createdAt`,
		a.`updatedAt`,
		b.`courseCode`,
		c.`firstName`,
		c.`lastName`
		FROM
		`post` as a
		INNER JOIN `class` as b
		ON
		a.`classId`=b.`id`
		INNER JOIN
		`user` as c
		ON
		a.`writerEmail` = c.`email`
		WHERE
		b.`profEmail` = #{email}
		ORDER BY
		a.`updatedAt`
		DESC;
	</select>
</mapper>