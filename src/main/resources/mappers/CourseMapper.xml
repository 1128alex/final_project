<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.univ.course.dao.CourseDAO">
	<select id="selectCourseList"
		resultType="com.univ.course.model.Course">
		SELECT
		`courseCode`,
		`courseName`,
		`description`,
		`price`,
		`createdAt`,
		`updatedAt`
		FROM
		`course`
		ORDER BY
		`courseCode`
		ASC
	</select>

	<select id="selectCourseListBySubjectCode"
		parameterType="string" resultType="com.univ.course.model.Course">
		SELECT
		`courseCode`,
		`courseName`,
		`description`,
		`price`,
		`createdAt`,
		`updatedAt`
		FROM
		`course`
		WHERE
		<if test='subjectCode != "0"'>
			`courseCode` LIKE
			CONCAT(#{subjectCode},'%')
		</if>
		ORDER BY
		`courseCode`
		ASC
	</select>

	<select id="getFilteredCourseList"
		resultType="com.univ.course.model.Class">
		SELECT
		`courseCode`,
		`courseName`,
		`description`,
		`price`,
		`createdAt`,
		`updatedAt`
		FROM
		`class`
		WHERE
		`id` OR `courseCode` LIKE
		CONCAT('%',#{searchKeyword},'%')
		<if test="couseName != null">

		</if>

		ORDER
		BY
		`courseCode`
	</select>
	<select id="selectCourseByCourseCode" parameterType="string"
		resultType="com.univ.course.model.Course">
		SELECT
		`courseCode`,
		`courseName`,
		`description`,
		`price`,
		`createdAt`,
		`updatedAt`
		FROM
		`course`
		WHERE
		`courseCode` = #{courseCode}
	</select>

	<select id="selectDuplicated" parameterType="map"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		`class`
		WHERE
		`courseCode` = #{courseCode}
		AND
		`profEmail` =
		#{profEmail}
		LIMIT 1;
	</select>

	<insert id="insertClass"
		parameterType="com.univ.course.model.Class">
		INSERT INTO`class`
		(
		`courseCode`,
		`profEmail`,
		`maxNum`,
		`registerDueDate`,
		`monStartTime`,
		`tueStartTime`,
		`wedStartTime`,
		`thuStartTime`,
		`friStartTime`,
		`createdAt`,
		`updatedAt`
		)
		VALUES
		(
		#{courseCode}
		,#{profEmail}
		,#{maxNum}
		,#{registerDueDate}
		,#{monStartTime}
		,#{tueStartTime}
		,#{wedStartTime}
		,#{thuStartTime}
		,#{friStartTime}
		,NOW()
		,NOW()
		)
	</insert>

	<update id="updateClass"
		parameterType="com.univ.course.model.Class">
		UPDATE `class`
		SET
		`courseCode` = #{courseCode},
		`maxNum` = #{maxNum},
		<if test="registerDueDate != null">
			`registerDueDate` = #{registerDueDate},
		</if>
		<if test="monStartTime != null">
			`monStartTime` = #{monStartTime},
		</if>
		<if test="tueStartTime != null">
			`tueStartTime` = #{tueStartTime},
		</if>
		<if test="wedStartTime != null">
			`wedStartTime` = #{wedStartTime},
		</if>
		<if test="thuStartTime != null">
			`thuStartTime` = #{thuStartTime},
		</if>
		<if test="friStartTime != null">
			`friStartTime` = #{friStartTime},
		</if>
		`updatedAt` = NOW()
		WHERE
		`id` = #{id} AND
		`profEmail` =
		#{profEmail};
	</update>

	<select id="selectClassList"
		resultType="com.univ.course.model.Class">
		SELECT
		`id`,
		`courseCode`,
		`profEmail`,
		`maxNum`,
		`registerDueDate`,
		`monStartTime`,
		`tueStartTime`,
		`wedStartTime`,
		`thuStartTime`,
		`friStartTime`,
		`createdAt`,
		`updatedAt`
		FROM
		`class`
		ORDER
		BY
		`courseCode`
	</select>
	<select id="selectClassListByEmail" parameterType="string"
		resultType="com.univ.course.model.Class">
		SELECT
		`id`,
		`courseCode`,
		`profEmail`,
		`maxNum`,
		`registerDueDate`,
		`monStartTime`,
		`tueStartTime`,
		`wedStartTime`,
		`thuStartTime`,
		`friStartTime`,
		`createdAt`,
		`updatedAt`
		FROM
		`class`
		WHERE
		`profEmail` =
		#{email}
		ORDER BY `createdAt` DESC;
	</select>

	<select id="selectClassByClassId" parameterType="int"
		resultType="com.univ.course.model.Class">
		SELECT
		`id`,
		`courseCode`,
		`profEmail`,
		`maxNum`,
		`registerDueDate`,
		`monStartTime`,
		`tueStartTime`,
		`wedStartTime`,
		`thuStartTime`,
		`friStartTime`,
		`createdAt`,
		`updatedAt`
		FROM
		`class`
		WHERE
		`id` = #{classId}
	</select>

	<delete id="deleteClass" parameterType="int">
		DELETE
		FROM
		`class`
		WHERE
		`id` = #{classId}
	</delete>
</mapper>