<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.univ.user.dao.UserDAO">

	<select id="selectUserByIdPassword" parameterType="map"
		resultType="com.univ.user.model.User">
		SELECT
		`email`,
		`studentNum`,
		`type`,
		`firstName`,
		`lastName`,
		`birth`,
		`gender`,
		`subject`,
		`profileUrl`
		FROM
		`user`
		WHERE
		<choose>
			<when test="studentNum != null">
				`studentNum` =
				#{studentNum}
			</when>
			<when test="email != null">
				`email` =
				#{email}
			</when>
		</choose>
		AND
		`password` = #{password}
	</select>

	<select id="checkDuplicate" parameterType="string"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		`user`
		WHERE
		`email` = #{email}
	</select>

	<insert id="insertUser" parameterType="com.univ.user.model.User">
		INSERT INTO `user`
		(
		`email`,
		`password`,
		`studentNum`,
		`type`,
		`firstName`,
		`lastName`,
		`birth`,
		`gender`,
		`subject`,
		`verifyQuestion`,
		`verifyAnswer`,
		`profileUrl`,
		`createdAt`,
		`updatedAt`
		)
		VALUES
		(
		#{email}
		,#{password}
		,#{studentNum}
		,#{type}
		,#{firstName}
		,#{lastName}
		,#{birth}
		,#{gender}
		,#{subject}
		,#{verifyQuestion}
		,#{verifyAnswer}
		,#{profileUrl}
		,NOW()
		,NOW()
		)
	</insert>

	<select id="selectStudentNum" resultType="string"
		parameterType="map">
		SELECT
		lpad(CONVERT(CONVERT(IFNULL(MAX(`studentNum`),
		CONCAT(#{year},
		#{faculty}, '0000')), unsigned)+1,char),8,'0')
		FROM
		`user`
		WHERE
		`studentNum` like CONCAT(#{year}, #{faculty}, '%');
	</select>

	<select id="selectUserByEmail"
		resultType="com.univ.user.model.User" parameterType="string">
		SELECT
		`email`,
		`studentNum`,
		`type`,
		`firstName`,
		`lastName`,
		`birth`,
		`gender`,
		`subject`,
		`profileUrl`
		FROM
		`user`
		WHERE
		`email` = #{email}
	</select>

	<select id="selectVerifyQuestion" parameterType="string"
		resultType="com.univ.user.model.User">
		SELECT
		`email`,
		`verifyQuestion`,
		`verifyAnswer`
		FROM
		`user`
		WHERE
		`email` = #{email}
	</select>

	<select id="verifyQuestion" parameterType="map" resultType="int">
		SELECT
		count(*)
		FROM
		`user`
		WHERE
		`email` =
		#{email}
		AND
		`verifyQuestion` =
		#{question}
		AND
		`verifyAnswer` = #{answer}
	</select>

	<update id="resetPassword" parameterType="map">
		UPDATE `user`
		SET
		`password` = #{password}
		WHERE
		`email` = #{email},
		`updatedAt` = NOW();
	</update>

	<select id="selectUserListByTypeName" parameterType="map"
		resultType="com.univ.user.model.User">
		SELECT
		`email`,
		`studentNum`,
		`type`,
		`firstName`,
		`lastName`,
		`birth`,
		`gender`,
		`subject`,
		`profileUrl`
		FROM
		`user`
		WHERE
		`type` = #{type}
		AND
		`email` != #{loggedEmail}
		AND
		<if test="search != null">
			(CONCAT(`firstName`, ' ', `lastName`) LIKE
			CONCAT('%',#{search},'%')
			OR
			`email` LIKE CONCAT('%',#{search},'%'))
			<!-- (`firstName` LIKE CONCAT('%',#{name},'%') OR `lastName` LIKE CONCAT('%',#{name},'%')) -->
		</if>
	</select>

	<update id="updateUser" parameterType="com.univ.user.model.User">
		UPDATE `user`
		SET
		`email`=#{user.email},
		`profileUrl` = #{user.profileUrl},
		`firstName` =
		#{user.firstName},
		`lastName` = #{user.lastName},
		`birth` =
		#{user.birth},
		`gender` =
		#{user.gender},
		`updatedAt` = NOW()
		WHERE
		`email` = #{prevEmail}
	</update>

	<delete id="deleteUser" parameterType="string">
		DELETE FROM `user`
		WHERE
		`email` = #{email};
	</delete>

	<select id="selectChatMemberList"
		resultType="com.univ.user.model.User" parameterType="string">
		SELECT
		`email`,
		`firstName`,
		`lastName`,
		`profileUrl`
		FROM
		`user`
		WHERE
		#{members}
		LIKE
		CONCAT('%/',`email`,'/%')
	</select>
</mapper>